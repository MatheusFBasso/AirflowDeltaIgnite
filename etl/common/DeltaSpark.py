from pyspark.sql import SparkSession
from .utils import Now

class DeltaSpark(Now):

    _SHOW = False

    ####################################################################################################################
    def __init__(self, app_name: str = 'PySparkDelta'):
        super().__init__()
        self._appName = app_name

    ####################################################################################################################
    def initialize(self):

        self.log_message(show=self._SHOW, start=True, sep='=', message='STARTING SPARK')

        # --------------------------------------------------------------------------------------------------------------
        spark = SparkSession.builder \
            .appName(self._appName) \
            .config("spark.eventLog.enabled", "false") \
            .config("spark.sql.extensions", "io.delta.sql.DeltaSparkSessionExtension") \
            .config("spark.sql.catalog.spark_catalog", "org.apache.spark.sql.delta.catalog.DeltaCatalog") \
            .config("spark.submit.deployMode", "client") \
            .getOrCreate()
        # --------------------------------------------------------------------------------------------------------------
        print(f"┌{'─' * 118}┐")
        print(r"_______/\\\\\\\\\\\____/\\\\\\\\\\\\\_______/\\\\\\\\\_______/\\\\\\\\\______/\\\________/\\\_______________________" + f"{'_' * 3}_")
        print(r"______/\\\/////////\\\_\/\\\/////////\\\___/\\\\\\\\\\\\\___/\\\///////\\\___\/\\\_____/\\\//_______________________" + f"{'_' * 3}_")
        print(r"______\//\\\______\///__\/\\\_______\/\\\__/\\\/////////\\\_\/\\\_____\/\\\___\/\\\__/\\\//_________________________" + f"{'_' * 3}_")
        print(r"________\////\\\_________\/\\\\\\\\\\\\\/__\/\\\_______\/\\\_\/\\\\\\\\\\\/____\/\\\\\\//\\\________________________" + f"{'_' * 3}_")
        print(r"____________\////\\\______\/\\\/////////____\/\\\\\\\\\\\\\\\_\/\\\//////\\\____\/\\\//_\//\\\______________________" + f"{'_' * 3}_")
        print(r"________________\////\\\___\/\\\_____________\/\\\/////////\\\_\/\\\____\//\\\___\/\\\____\//\\\____________________" + f"{'_' * 3}_")
        print(r"__________/\\\______\//\\\__\/\\\_____________\/\\\_______\/\\\_\/\\\_____\//\\\__\/\\\_____\//\\\____............__" + f"{'_' * 3}_")
        print(r"__________\///\\\\\\\\\\\/___\/\\\_____________\/\\\_______\/\\\_\/\\\______\//\\\_\/\\\______\//\\\__............._" + f"{'_' * 3}_")
        print(r"_____________\///////////_____\///______________\///________\///__\///________\///__\///________\///__............._" + f"{'_' * 3}_")
        print(r"│                                                             ........      '.....................................  " + f"{' ' * 3}│")
        print(r"│                                                            .........        ...................................   " + f"{' ' * 3}│")
        print(r"│                                                            .........         ..................   ...........     " + f"{' ' * 3}│")
        print(r"│                                                       .............           '........         ...........       " + f"{' ' * 3}│")
        print(r"│                                                ....................                           ...........         " + f"{' ' * 3}│")
        print(r"│                                         ...........................                         ...........           " + f"{' ' * 3}│")
        print(r"│                                     ............................                          ............            " + f"{' ' * 3}│")
        print(r"│                                   .......................                               ............              " + f"{' ' * 3}│")
        print(r"│                                  .................                                    ............                " + f"{' ' * 3}│")
        print(r"│                                  ...................                                  ...........                 " + f"{' ' * 3}│")
        print(r"│                                   ........................                             ...........                " + f"{' ' * 3}│")
        print(r"│                                     '..........................                         ...........               " + f"{' ' * 3}│")
        print(r"___/\\\\\\\\\\\\____________________/\\\\\\________________________________________________.........._______________" + f"{'_' * 3}_")
        print(r"___\/\\\////////\\\_________________\////\\\_________________________________________________.........._____________" + f"{'_' * 3}_")
        print(r"____\/\\\______\//\\\___________________\/\\\________/\\\_____________________________________...........___________" + f"{'_' * 3}_")
        print(r"_____\/\\\_______\/\\\_____/\\\\\\\\_____\/\\\_____/\\\\\\\\\\\__/\\\\\\\\\_________......_____...........__________" + f"{'_' * 3}_")
        print(r"______\/\\\_______\/\\\___/\\\/////\\\____\/\\\____\////\\\////__\////////\\\_______....................... ________" + f"{'_' * 3}_")
        print(r"_______\/\\\_______\/\\\__/\\\\\\\\\\\_____\/\\\_______\/\\\________/\\\\\\\\\\_____........................________" + f"{'_' * 3}_")
        print(r"________\/\\\_______/\\\__\//\\///////______\/\\\_______\/\\\_/\\___/\\\/////\\\____........................________" + f"{'_' * 3}_")
        print(r"_________\/\\\\\\\\\\\\/____\//\\\\\\\\\\__/\\\\\\\\\____\//\\\\\___\//\\\\\\\\/\\__........................________" + f"{'_' * 3}_")
        print(r"_________\////////////_______\//////////__\/////////______\/////_____\////////\//________................. _________" + f"{'_' * 3}_")
        # --------------------------------------------------------------------------------------------------------------
        self.log_message(show=self._SHOW, end=True, sep='=', message='SPARK | DELTA | INITIALIZED')

        return spark